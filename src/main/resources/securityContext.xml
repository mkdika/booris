<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
                                 http://www.springframework.org/schema/security 
                                 http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!--add security to service layer method eg:@Secured({"ROLE_USER"})-->
    <global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>    

    <http>
        <!--Activated the Cross Site Request Forgery (CSRF) Protection-->
        <!--<csrf />-->
        
        <!-- ====================================================== -->
        <!-- If we have our own LoginPage. So we must -->
        <!-- tell Spring the name and the place. -->
        <!-- In our case we take the same page -->
        <!-- for a error message by a failure. -->
        <!-- Further the page after a successfully login. -->
        <!-- ====================================================== -->
        <form-login login-page="/login.zul"
                    authentication-failure-url="/login.zul?login_error=1"
                    default-target-url="/page/mainpage.zul" always-use-default-target="true" />               
        
        <intercept-url pattern="/login.zul" access="IS_AUTHENTICATED_ANONYMOUSLY" /> 
        <intercept-url pattern="/assets/*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/template/*.zul" access="ROLE_DEFAULT" />
        <intercept-url pattern="/page/mainpage.zul" access="ROLE_DEFAULT" />
                                        
        <!--start per page/menu role intercept-->
        <!-- MENU01 - User Management -->
        <intercept-url pattern="/page/menu01.zul" access="ROLE_MENU01" />
        
        <!-- MENU02 - Register Author -->
        <intercept-url pattern="/page/menu02.zul" access="ROLE_MENU02" />
        
        <!-- MENU03 - Register Book -->
        <intercept-url pattern="/page/menu03.zul" access="ROLE_MENU03" />
        
        <!-- MENU04 - Register Customer -->
        <intercept-url pattern="/page/menu04.zul" access="ROLE_MENU04" />        
        
        <!-- MENU05 - Borrow Book -->
        <intercept-url pattern="/page/menu05.zul" access="ROLE_MENU05" />        
        <!--</http>-->
        
        <!--end per page role-->
        
                        
        <!--Testing logout invalidate session-->        
        <logout 
            invalidate-session="true" 
            logout-success-url="/login.zul"
            logout-url="/j_spring_security_logout" />      
        
        <session-management>
            <!--error-if-maximum-exceeded="true"-->
            <concurrency-control max-sessions="1"                                 
                                 expired-url="/login.zul"
                                 session-registry-alias="sessionRegistry"/> 
        </session-management>
                    
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>
    </http>
        
    <beans:bean id="requestContextFilter" class="org.springframework.web.filter.RequestContextFilter"/>    
    
    <!--START custom auth manager-->
    <authentication-manager alias="authenticationManager" erase-credentials="false">
        <authentication-provider ref="customAuthProvider"/>
    </authentication-manager>    
    <beans:bean id="customAuthProvider" class="com.mkdika.booris.ui.web.config.CustomAuthProvider" />    
    <beans:bean id="userDetailService" class="com.mkdika.booris.ui.web.config.UserDetailService" />
    <!--END custom auth manager-->            
</beans:beans>
